import{c9 as g,ca as N,cb as S,O as u,cc as w,cd as O,D as j,ba as $,ce as p,cf as x,cg as v,ch as f,ci as h,cj as B}from"./vendor.b8b0b9ef.js";import{c as E,a as d}from"./devEnvironmentUtils.444b8fd1.js";function W(e,t,a,l){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?M(e,t,l):O(e,t,l).then(o=>F(o,e.name,t,a,l)):Promise.reject(new j("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function F(e,t,a,l,o){const c=e.data,b={portal:a&&a.portal||$.getDefault(),url:u(e.baseUrl),origin:"portal-item"},s=c.items.find(r=>r.name===t);if(!s){const r=`The symbol name '${t}' could not be found`;return Promise.reject(new j("symbolstyleutils:symbol-name-not-found",r,{symbolName:t}))}let m=p(x(s,l),b),i=s.thumbnail&&s.thumbnail.href;const y=s.thumbnail&&s.thumbnail.imageData;E()&&(m=d(m),i=d(i));const D={portal:a.portal,url:u(w(m)),origin:"portal-item"};return g(m,o).then(r=>{const U=l==="cimRef"?N(r.data):r.data,n=S(U,D);if(n&&v(n)){if(i){const P=p(i,b);n.thumbnail=new f({url:P})}else y&&(n.thumbnail=new f({url:`data:image/png;base64,${y}`}));e.styleUrl?n.styleOrigin=new h({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(n.styleOrigin=new h({portal:a.portal,styleName:e.styleName,name:t}))}return n})}function M(e,t,a){const l=B.replace(/\{SymbolName\}/gi,e.name);return g(l,a).then(o=>{const c=N(o.data);return S(c,{portal:t.portal,url:u(w(l)),origin:"portal-item"})})}export{F as fetchSymbolFromStyle,W as resolveWebStyleSymbol};
