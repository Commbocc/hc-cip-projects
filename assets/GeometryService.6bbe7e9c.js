var G=Object.defineProperty,H=Object.defineProperties;var F=Object.getOwnPropertyDescriptors;var C=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,Y=Object.prototype.propertyIsEnumerable;var L=(t,e,r)=>e in t?G(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,l=(t,e)=>{for(var r in e||(e={}))b.call(e,r)&&L(t,r,e[r]);if(C)for(var r of C(e))Y.call(e,r)&&L(t,r,e[r]);return t},N=(t,e)=>H(t,F(e));import{N as y,M as T,Q as k,W as M,P as S,Z as J,_ as c,$ as p,a0 as A,bZ as w,ap as v,I as $,O as K}from"./vendor.b8b0b9ef.js";import{o as m,s as g}from"./utils.931ca8bb.js";import{l as P}from"./Task.b8d888f6.js";async function B(t,e,r){const s=m(t),n=l(N(l({},s.query),{f:"json"}),e.toJSON()),i=g(n,r);return y(s.path+"/areasAndLengths",i).then(a=>a.data)}function E(t){return{geometryType:T(t[0]),geometries:t.map(e=>e.toJSON())}}function q(t,e,r){const s=k(e);return t.map(n=>{const i=s.fromJSON(n);return i.spatialReference=r,i})}async function Q(t,e,r,s){const n=e[0].spatialReference,i=m(t),a=N(l({},i.query),{f:"json",sr:JSON.stringify(n.toJSON()),polygons:JSON.stringify(E(e).geometries),polylines:JSON.stringify(E(r).geometries)}),u=g(a,s);return y(i.path+"/autoComplete",u).then(({data:f})=>(f.geometries||[]).map(({rings:d})=>new M({spatialReference:n,rings:d})))}async function V(t,e,r){const s=m(t),n=l(N(l({},s.query),{f:"json"}),e.toJSON()),i=e.outSpatialReference||e.geometries[0].spatialReference,a=g(n,r);return y(s.path+"/buffer",a).then(u=>(u.data.geometries||[]).map(({rings:f})=>new M({spatialReference:i,rings:f})))}async function z(t,e,r){const s=e[0].spatialReference,n=m(t),i=N(l({},n.query),{f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(E(e))}),a=g(i,r);return y(n.path+"/convexHull",a).then(({data:u})=>S(u.geometry).set({spatialReference:s}))}async function W(t,e,r,s){const n=m(t),i=e[0].spatialReference,a=N(l({},s),{query:N(l({},n.query),{f:"json",sr:JSON.stringify(i),target:JSON.stringify({geometryType:T(e[0]),geometries:e}),cutter:JSON.stringify(r)})}),u=await y(n.path+"/cut",a),{cutIndexes:f,geometries:d=[]}=u.data;return{cutIndexes:f,geometries:d.map(j=>{const D=S(j);return D.spatialReference=i,D})}}async function Z(t,e,r){const s=e.geometries[0].spatialReference,n=m(t),i=l(N(l({},n.query),{f:"json"}),e.toJSON()),a=g(i,r);return y(n.path+"/densify",a).then(({data:u})=>(u.geometries||[]).map(f=>S(f).set({spatialReference:s})))}async function X(t,e,r,s){const n=e[0].spatialReference,i=m(t);let a={query:N(l({},i.query),{f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(E(e)),geometry:JSON.stringify({geometryType:T(r),geometry:r.toJSON()})})};return s&&(a=l(l({},s),a)),y(i.path+"/difference",a).then(({data:u})=>(u.geometries||[]).map(f=>S(f).set({spatialReference:n})))}async function ee(t,e,r){const s=m(t),n=l(N(l({},s.query),{f:"json"}),e.toJSON()),i=g(n,r);return y(s.path+"/distance",i).then(({data:a})=>a&&a.distance)}const x=new J({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"});async function te(t,e,r){const s={};e.sr!=null&&typeof e.sr=="object"?s.sr=e.sr.wkid||JSON.stringify(e.sr):s.sr=e.sr,s.strings=JSON.stringify(e.strings);const n=e.conversionType||"mgrs";s.conversionType=x.toJSON(n),s.conversionMode=e.conversionMode;const i=m(t),a=l(N(l({},i.query),{f:"json"}),s),u=g(a,r);return y(i.path+"/fromGeoCoordinateString",u).then(({data:f})=>f.coordinates)}let R=class extends v{constructor(t){super(t),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};c([p({type:String,json:{write:!0}})],R.prototype,"deviationUnit",void 0),c([p({json:{read:{reader:t=>t?t.map(e=>S(e)):null},write:{writer:(t,e)=>{e.geometries=t.map(r=>r.toJSON())}}}})],R.prototype,"geometries",void 0),c([p({type:Number,json:{write:!0}})],R.prototype,"maxDeviation",void 0),R=c([A("esri.rest.support.GeneralizeParameters")],R),R.from=w(R);const re=R,ne=new J({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});function se(t){const{geometries:e,deviationUnit:r,maxDeviation:s}=t.toJSON(),n={maxDeviation:s};return e&&e.length&&(n.geometries=JSON.stringify({geometryType:T(e[0]),geometries:e}),n.sr=JSON.stringify(e[0].spatialReference)),ne.write(r,n,"deviationUnit"),n}async function oe(t,e,r){const s=(e=re.from(e)).toJSON(),n=se(e),i=m(t),a=l(N(l({},i.query),{f:"json"}),n),u=s.geometries[0].spatialReference,f=g(a,r);return y(i.path+"/generalize",f).then(({data:d})=>(d.geometries||[]).map(j=>S(j).set({spatialReference:u})))}async function ie(t,e,r,s){const n=e[0].spatialReference,i=m(t),a=N(l({},i.query),{f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(E(e)),geometry:JSON.stringify({geometryType:T(r),geometry:r.toJSON()})}),u=g(a,s);return y(i.path+"/intersect",u).then(({data:f})=>(f.geometries||[]).map(d=>S(d).set({spatialReference:n})))}function ae(t,e,r){const s=e.map(f=>f.toJSON()),n=e[0].spatialReference,i=m(t),a=N(l({},i.query),{f:"json",sr:n.wkid?n.wkid:JSON.stringify(n.toJSON()),polygons:JSON.stringify(s)}),u=g(a,r);return y(i.path+"/labelPoints",u).then(({data:f})=>(f.labelPoints||[]).map(d=>S(d).set({spatialReference:n})))}let _=class extends v{constructor(t){super(t),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};c([p({type:String,json:{write:!0}})],_.prototype,"calculationType",void 0),c([p({type:Boolean,json:{write:!0}})],_.prototype,"geodesic",void 0),c([p({json:{write:!0}})],_.prototype,"lengthUnit",void 0),c([p({type:[$],json:{read:{reader:t=>t?t.map(e=>S(e)):null},write:{writer:(t,e)=>{e.polylines=t.map(r=>r.toJSON())}}}})],_.prototype,"polylines",void 0),_=c([A("esri.rest.support.LengthsParameters")],_),_.from=w(_);const le=_,ue=new J({preserveShape:"preserve-shape"});function ce(t){const{polylines:e,lengthUnit:r,geodesic:s,calculationType:n}=t.toJSON(),i={};i.polylines=JSON.stringify(e);const a=t.polylines[0].spatialReference;return i.sr=a.wkid?a.wkid:JSON.stringify(a.toJSON()),r&&(i.lengthUnit=r),s&&(i.geodesic=s),n&&(i.calculationType=ue.toJSON(n)),i}async function fe(t,e,r){e=le.from(e);const s=ce(e),n=m(t),i=l(N(l({},n.query),{f:"json"}),s),a=g(i,r);return y(n.path+"/lengths",a).then(({data:u})=>u)}let I=class extends v{constructor(t){super(t),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};c([p({type:Number,json:{write:!0}})],I.prototype,"bevelRatio",void 0),c([p({json:{read:{reader:t=>t?t.map(e=>S(e)):null},write:{writer:(t,e)=>{e.geometries=t.map(r=>r.toJSON())}}}})],I.prototype,"geometries",void 0),c([p({type:Number,json:{write:!0}})],I.prototype,"offsetDistance",void 0),c([p({type:String,json:{write:!0}})],I.prototype,"offsetHow",void 0),c([p({type:String,json:{write:!0}})],I.prototype,"offsetUnit",void 0),I=c([A("esri.rest.support.OffsetParameters")],I),I.from=w(I);const Ne=I,pe=new J({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),ye=new J({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});function me(t){const{geometries:e,bevelRatio:r,offsetDistance:s,offsetHow:n,offsetUnit:i}=t.toJSON(),a={bevelRatio:r,offsetDistance:s};return e&&e.length&&(a.geometries=JSON.stringify({geometryType:T(e[0]),geometries:e}),a.sr=JSON.stringify(e[0].spatialReference)),n&&(a.offsetHow=pe.toJSON(n)),i&&(a.offsetUnit=ye.toJSON(i)),a}async function ge(t,e,r){e=Ne.from(e);const s=me(e),n=m(t),i=l(N(l({},n.query),{f:"json"}),s),a=e.geometries[0].spatialReference,u=g(i,r);return y(n.path+"/offset",u).then(({data:f})=>(f.geometries||[]).map(d=>S(d).set({spatialReference:a})))}let U=class extends v{constructor(t){super(t),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const t=this.geometries.map(function(s){return s.toJSON()}),e=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=e.spatialReference.wkid||JSON.stringify(e.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:T(e),geometries:t}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};c([p()],U.prototype,"geometries",void 0),c([p({json:{read:{source:"outSR"}}})],U.prototype,"outSpatialReference",void 0),c([p()],U.prototype,"transformation",void 0),c([p()],U.prototype,"transformForward",void 0),U=c([A("esri.rest.support.ProjectParameters")],U);const Se=U,de=w(Se);async function Te(t,e,r){e=de(e);const s=m(t),n=l(N(l({},s.query),{f:"json"}),e.toJSON()),i=e.outSpatialReference,a=T(e.geometries[0]),u=g(n,r);return y(s.path+"/project",u).then(({data:{geometries:f}})=>q(f,a,i))}let O=class extends v{constructor(t){super(t),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};c([p({json:{read:{reader:t=>t?t.map(e=>S(e)):null},write:{writer:(t,e)=>{e.geometries1=t.map(r=>r.toJSON())}}}})],O.prototype,"geometries1",void 0),c([p({json:{read:{reader:t=>t?t.map(e=>S(e)):null},write:{writer:(t,e)=>{e.geometries2=t.map(r=>r.toJSON())}}}})],O.prototype,"geometries2",void 0),c([p({type:String,json:{write:!0}})],O.prototype,"relation",void 0),c([p({type:String,json:{write:!0}})],O.prototype,"relationParameter",void 0),O=c([A("esri.rest.support.RelationParameters")],O),O.from=w(O);const Ie=O,_e=new J({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});function Oe(t){const{geometries1:e,geometries2:r,relation:s,relationParameter:n}=t.toJSON(),i={};if(e&&e.length){i.geometries1=JSON.stringify({geometryType:T(e[0]),geometries:e});const a=e[0].spatialReference;i.sr=a.wkid?a.wkid:JSON.stringify(a)}return r&&r.length>0&&(i.geometries2=JSON.stringify({geometryType:T(r[0]),geometries:r})),s&&(i.relation=_e.toJSON(s)),n&&(i.relationParam=n),i}async function Re(t,e,r){e=Ie.from(e);const s=Oe(e),n=m(t),i=l(N(l({},n.query),{f:"json"}),s),a=g(i,r);return y(n.path+"/relation",a).then(({data:u})=>u.relations)}async function he(t,e,r,s){const n=e.spatialReference,i=m(t),a=N(l({},i.query),{f:"json",sr:JSON.stringify(n.toJSON()),target:JSON.stringify({geometryType:T(e),geometry:e.toJSON()}),reshaper:JSON.stringify(r.toJSON())}),u=g(a,s);return y(i.path+"/reshape",u).then(({data:f})=>S(f.geometry).set({spatialReference:n}))}async function Ue(t,e,r){const s=typeof t=="string"?K(t):t,n=e[0].spatialReference,i=T(e[0]),a=N(l({},r),{query:N(l({},s.query),{f:"json",sr:n.wkid?n.wkid:JSON.stringify(n),geometries:JSON.stringify(E(e))})}),{data:u}=await y(s.path+"/simplify",a);return q(u.geometries,i,n)}async function Ee(t,e,r){const s={};e.sr!=null&&typeof e.sr=="object"?s.sr=e.sr.wkid||JSON.stringify(e.sr):s.sr=e.sr,s.coordinates=JSON.stringify(e.coordinates);const n=e.conversionType||"mgrs";s.conversionType=x.toJSON(n),s.conversionMode=e.conversionMode,s.numOfDigits=e.numOfDigits,s.rounding=e.rounding,s.addSpaces=e.addSpaces;const i=m(t),a=l(N(l({},i.query),{f:"json"}),s),u=g(a,r);return y(i.path+"/toGeoCoordinateString",u).then(({data:f})=>f.strings)}let h=class extends v{constructor(t){super(t),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};c([p({type:String,json:{write:!0}})],h.prototype,"extendHow",void 0),c([p({type:[$],json:{read:{reader:t=>t?t.map(e=>S(e)):null},write:{writer:(t,e)=>{e.polylines=t.map(r=>r.toJSON())}}}})],h.prototype,"polylines",void 0),c([p({json:{read:{reader:t=>t?S(t):null},write:{writer:(t,e)=>{e.trimExtendTo=t.toJSON()}}}})],h.prototype,"trimExtendTo",void 0),h=c([A("esri.rest.support.TrimExtendParameters")],h),h.from=w(h);const Je=h,Ae=new J({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});function we(t){const{extendHow:e,polylines:r,trimExtendTo:s}=t.toJSON(),n={};return n.extendHow=Ae.toJSON(e),r&&r.length&&(n.polylines=JSON.stringify(r),n.sr=JSON.stringify(r[0].spatialReference)),s&&(n.trimExtendTo=JSON.stringify(s)),n}async function ve(t,e,r){e=Je.from(e);const s=we(e),n=m(t),i=l(N(l({},n.query),{f:"json"}),s),a=e.sr,u=g(i,r);return y(n.path+"/trimExtend",u).then(({data:f})=>(f.geometries||[]).map(({paths:d})=>new $({spatialReference:a,paths:d})))}async function je(t,e,r){const s=e[0].spatialReference,n=m(t),i=N(l({},n.query),{f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(E(e))}),a=g(i,r);return y(n.path+"/union",a).then(({data:u})=>S(u.geometry).set({spatialReference:s}))}let o=class extends P{constructor(t){super(t),this.url=null}areasAndLengths(t,e){return B(this.url,t,e)}autoComplete(t,e,r){return Q(this.url,t,e,r)}buffer(t,e){return V(this.url,t,e)}convexHull(t,e){return z(this.url,t,e)}cut(t,e,r){return W(this.url,t,e,r)}densify(t,e){return Z(this.url,t,e)}difference(t,e,r){return X(this.url,t,e,r)}distance(t,e){return ee(this.url,t,e)}fromGeoCoordinateString(t,e){return te(this.url,t,e)}generalize(t,e){return oe(this.url,t,e)}intersect(t,e,r){return ie(this.url,t,e,r)}labelPoints(t,e){return ae(this.url,t,e)}lengths(t,e){return fe(this.url,t,e)}offset(t,e){return ge(this.url,t,e)}project(t,e){return Te(this.url,t,e)}relation(t,e){return Re(this.url,t,e)}reshape(t,e,r){return he(this.url,t,e,r)}simplify(t,e){return Ue(this.url,t,e)}toGeoCoordinateString(t,e){return Ee(this.url,t,e)}trimExtend(t,e){return ve(this.url,t,e)}union(t,e){return je(this.url,t,e)}};o.UNIT_METER=9001,o.UNIT_GERMAN_METER=9031,o.UNIT_FOOT=9002,o.UNIT_SURVEY_FOOT=9003,o.UNIT_CLARKE_FOOT=9005,o.UNIT_FATHOM=9014,o.UNIT_NAUTICAL_MILE=9030,o.UNIT_SURVEY_CHAIN=9033,o.UNIT_SURVEY_LINK=9034,o.UNIT_SURVEY_MILE=9035,o.UNIT_KILOMETER=9036,o.UNIT_CLARKE_YARD=9037,o.UNIT_CLARKE_CHAIN=9038,o.UNIT_CLARKE_LINK=9039,o.UNIT_SEARS_YARD=9040,o.UNIT_SEARS_FOOT=9041,o.UNIT_SEARS_CHAIN=9042,o.UNIT_SEARS_LINK=9043,o.UNIT_BENOIT_1895A_YARD=9050,o.UNIT_BENOIT_1895A_FOOT=9051,o.UNIT_BENOIT_1895A_CHAIN=9052,o.UNIT_BENOIT_1895A_LINK=9053,o.UNIT_BENOIT_1895B_YARD=9060,o.UNIT_BENOIT_1895B_FOOT=9061,o.UNIT_BENOIT_1895B_CHAIN=9062,o.UNIT_BENOIT_1895B_LINK=9063,o.UNIT_INDIAN_FOOT=9080,o.UNIT_INDIAN_1937_FOOT=9081,o.UNIT_INDIAN_1962_FOOT=9082,o.UNIT_INDIAN_1975_FOOT=9083,o.UNIT_INDIAN_YARD=9084,o.UNIT_INDIAN_1937_YARD=9085,o.UNIT_INDIAN_1962_YARD=9086,o.UNIT_INDIAN_1975_YARD=9087,o.UNIT_FOOT_1865=9070,o.UNIT_RADIAN=9101,o.UNIT_DEGREE=9102,o.UNIT_ARCMINUTE=9103,o.UNIT_ARCSECOND=9104,o.UNIT_GRAD=9105,o.UNIT_GON=9106,o.UNIT_MICRORADIAN=9109,o.UNIT_ARCMINUTE_CENTESIMAL=9112,o.UNIT_ARCSECOND_CENTESIMAL=9113,o.UNIT_MIL6400=9114,o.UNIT_BRITISH_1936_FOOT=9095,o.UNIT_GOLDCOAST_FOOT=9094,o.UNIT_INTERNATIONAL_CHAIN=109003,o.UNIT_INTERNATIONAL_LINK=109004,o.UNIT_INTERNATIONAL_YARD=109001,o.UNIT_STATUTE_MILE=9093,o.UNIT_SURVEY_YARD=109002,o.UNIT_50KILOMETER_LENGTH=109030,o.UNIT_150KILOMETER_LENGTH=109031,o.UNIT_DECIMETER=109005,o.UNIT_CENTIMETER=109006,o.UNIT_MILLIMETER=109007,o.UNIT_INTERNATIONAL_INCH=109008,o.UNIT_US_SURVEY_INCH=109009,o.UNIT_INTERNATIONAL_ROD=109010,o.UNIT_US_SURVEY_ROD=109011,o.UNIT_US_NAUTICAL_MILE=109012,o.UNIT_UK_NAUTICAL_MILE=109013,o.UNIT_SQUARE_INCHES="esriSquareInches",o.UNIT_SQUARE_FEET="esriSquareFeet",o.UNIT_SQUARE_YARDS="esriSquareYards",o.UNIT_ACRES="esriAcres",o.UNIT_SQUARE_MILES="esriSquareMiles",o.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",o.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",o.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",o.UNIT_SQUARE_METERS="esriSquareMeters",o.UNIT_ARES="esriAres",o.UNIT_HECTARES="esriHectares",o.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",c([p()],o.prototype,"url",void 0),o=c([A("esri.tasks.GeometryService")],o);const Me=o;export{Me as default};
