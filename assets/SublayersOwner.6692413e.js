var ee=Object.defineProperty,re=Object.defineProperties;var ie=Object.getOwnPropertyDescriptors;var U=Object.getOwnPropertySymbols;var te=Object.prototype.hasOwnProperty,se=Object.prototype.propertyIsEnumerable;var B=(e,r,i)=>r in e?ee(e,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[r]=i,v=(e,r)=>{for(var i in r||(r={}))te.call(r,i)&&B(e,i,r[i]);if(U)for(var i of U(r))se.call(r,i)&&B(e,i,r[i]);return e},L=(e,r)=>re(e,ie(r));import{_ as a,$ as n,bz as b,a5 as Z,f9 as ae,f0 as le,J as oe,a0 as A,N as z,O as ne,bu as ye,R as H,bP as ue,bI as pe,eW as de,a1 as ce,D as I,cv as fe,g5 as he,cg as be,g6 as V,bZ as ge,S as C,b2 as me,eU as P,eZ as ve,ae as Q,C as D,E as G,bj as Se,g7 as Ie,ao as F,fs as we,bv as S,f1 as xe,fv as Oe,e$ as Le,am as R,eN as K,aQ as De,fy as Ee,fU as $,g8 as Pe}from"./vendor.b8b0b9ef.js";import{r as _e}from"./Version.edd17048.js";import{p as $e}from"./CollectionFlattener.8d95190f.js";import{l as Fe}from"./floorFilterUtils.1acb5b5d.js";const qe=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(i,t){const s=t.capabilities&&t.capabilities.split(",").map(f=>f.toLowerCase().trim());if(!s)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const l=this.type,y=s.indexOf("query")!==-1,d=s.indexOf("map")!==-1,h=!!t.exportTilesAllowed,g=s.indexOf("tilemap")!==-1,p=l!=="tile"&&!!t.supportsDynamicLayers,w=l!=="tile"&&(!t.tileInfo||p),x=l!=="tile"&&(!t.tileInfo||p),O=l!=="tile",u=!!t.cimVersion&&_e.parse(t.cimVersion).since(1,4);return{operations:{supportsQuery:y,supportsExportMap:d,supportsExportTiles:h,supportsTileMap:g},exportMap:d?{supportsArcadeExpressionForLabeling:u,supportsSublayersChanges:O,supportsDynamicLayers:p,supportsSublayerVisibility:w,supportsSublayerDefinitionExpression:x}:null,exportTiles:h?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(i,t){let s=t.currentVersion;return s||(s=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchSublayerInfo(i,t){return await this.fetchAllLayersAndTables(t),this._allLayersAndTablesMap.get(i)}async fetchAllLayersAndTables(i){await this.load(i),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=z(ne(this.url).path+"/layers",{responseType:"json",query:L(v({f:"json"},this.customParameters),{token:this.apiKey})}).then(s=>{this._allLayersAndTablesMap=new Map;for(const l of s.data.layers)this._allLayersAndTablesMap.set(l.id,l);return{result:s.data}},s=>({error:s})));const t=await this._allLayersAndTablesPromise;if(ye(i),"result"in t)return t.result;throw t.error}};return a([n({readOnly:!0})],r.prototype,"capabilities",void 0),a([b("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),a([n({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),a([n({type:Z})],r.prototype,"fullExtent",void 0),a([n(ae)],r.prototype,"id",void 0),a([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),a([n(le)],r.prototype,"popupEnabled",void 0),a([n({type:oe})],r.prototype,"spatialReference",void 0),a([n()],r.prototype,"version",void 0),a([b("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=a([A("esri.layers.mixins.ArcGISMapService")],r),r};var _;function T(e){return e&&e.type==="esriSMS"}function j(e,r,i){var t;const s=this.originIdOf(r)>=$(i.origin);return{ignoreOrigin:!0,allowNull:s,enabled:!!i&&((t=i.layer)==null?void 0:t.type)==="map-image"&&(i.writeSublayerStructure||s)}}function W(e,r,i){var t;return{enabled:!!i&&((t=i.layer)==null?void 0:t.type)==="tile"&&this._isOverridden(r)}}function c(e,r,i){return{ignoreOrigin:!0,enabled:i&&i.writeSublayerStructure||!1}}function E(e,r,i){return{ignoreOrigin:!0,enabled:!!i&&(i.writeSublayerStructure||this.originIdOf(r)>=$(i.origin))}}const M=H.getLogger("esri.layers.support.Sublayer");let Te=0;const m=new Set;m.add("layer"),m.add("parent"),m.add("loaded"),m.add("loadStatus"),m.add("loadError"),m.add("loadWarnings");let o=_=class extends ue(pe(de(ce))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null}async load(e){return this.addResolvingPromise((async()=>{var r;if(!this.layer&&!this.url)throw new I("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let i=null;if(!this.layer||this.originIdOf("url")>2||((r=this.source)==null?void 0:r.type)==="data-layer")i=(await z(this.url,v({responseType:"json",query:{f:"json"}},e))).data;else{var t;let s=this.id;((t=this.source)==null?void 0:t.type)==="map-layer"&&(s=this.source.mapLayerId),i=await this.layer.fetchSublayerInfo(s,e)}i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service"}))})()),this}readCapabilities(e,r){const i=(e=(r=r.layerDefinition||r).capabilities||e)?e.toLowerCase().split(",").map(t=>t.trim()):[];return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:i.indexOf("query")!==-1}}}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new fe(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields){for(const i of r.fields)if(i.type==="esriFieldTypeGlobalID")return i.name}}get id(){const e=this._get("id");return e==null?Te++:e}set id(e){this._get("id")!==e&&(this.get("layer.capabilities.exportMap.supportsDynamicLayers")!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,i,t){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map(s=>s.write({},t))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(r=>r.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields){for(const i of r.fields)if(i.type==="esriFieldTypeOID")return i.name}}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const i=r.layerDefinition;return 1-.01*(i.transparency!=null?i.transparency:i.drawingInfo.transparency)}writeOpacity(e,r,i,t){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=he(this.parent.id):r.parentLayerId=-1}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){if(e){for(const r of e.getSymbols())if(be(r)){M.warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new V({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return ge(C.ofType(_),e)}writeSublayers(e,r,i){this.get("sublayers.length")&&(r[i]=this.sublayers.map(t=>t.id).toArray().reverse())}readTypeIdField(e,r){let i=(r=r.layerDefinition||r).typeIdField;if(i&&r.fields){i=i.toLowerCase();const t=r.fields.find(s=>s.name.toLowerCase()===i);t&&(i=t.name)}return null}get url(){var e,r;const i=(e=(r=this.layer)==null?void 0:r.parsedUrl)!=null?e:this._lastParsedUrl,t=this.source;if(!i)return null;if(this._lastParsedUrl=i,(t==null?void 0:t.type)==="map-layer")return`${i.path}/${t.mapLayerId}`;const s={layer:JSON.stringify({source:this.source})};return`${i.path}/dynamicLayer?${me(s)}`}set url(e){e?this._override("url",e):this._clearOverride("url")}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,i,t){r[i]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=P(this),r=new _;return P(r).store=e.clone(m),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return ve(this,e)}createQuery(){return new Q({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var e,r;if(this.hasOwnProperty("sublayers"))return null;const i=(e=this.layer)==null?void 0:e.parsedUrl,t=new(await import("./vendor.b8b0b9ef.js").then(function(s){return s.hj})).default({url:i.path});return i&&this.source&&(this.source.type==="map-layer"?t.layerId=this.source.mapLayerId:t.dynamicDataSource=this.source),this.layer.refreshInterval!=null&&(t.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(t.definitionExpression=this.definitionExpression),this.floorInfo&&(t.floorInfo=D(this.floorInfo)),this.originIdOf("labelingInfo")>2&&(t.labelingInfo=D(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(t.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(t.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(t.visible=this.visible),this.originIdOf("minScale")>0&&(t.minScale=this.minScale),this.originIdOf("maxScale")>0&&(t.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(t.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(t.popupTemplate=D(this.popupTemplate)),this.originIdOf("renderer")>2&&(t.renderer=D(this.renderer)),((r=this.source)==null?void 0:r.type)==="data-layer"&&(t.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(t.title=this.title),this.layer.type==="map-image"&&this.layer.originIdOf("customParameters")>0&&(t.customParameters=this.layer.customParameters),this.layer.type==="tile"&&this.layer.originIdOf("customParameters")>0&&(t.customParameters=this.layer.customParameters),t}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:r,types:i}=this;if(!r||!e)return null;const t=e.attributes?e.attributes[r]:void 0;if(t==null)return null;let s=null;return i.some(l=>{const{id:y}=l;return y!=null&&(y.toString()===t.toString()&&(s=l),!!s)}),s}getFieldDomain(e,r){const i=r&&r.feature,t=this.getFeatureType(i);if(t){const s=t.domains&&t.domains[e];if(s&&s.type!=="inherited")return s}return this._getLayerDomain(e)}async queryFeatures(e=this.createQuery(),r){var i,t,s,l;if(await this.load(),!this.get("capabilities.operations.supportsQuery"))throw new I("Sublayer.queryFeatures","this layer doesn't support queries.");const[{executeQuery:y},{default:d}]=await Promise.all([import("./query.c705041e.js").then(function(p){return p.q}),import("./vendor.b8b0b9ef.js").then(function(p){return p.hi})]),h=await y(this.url,Q.from(e),(i=(t=this.layer)==null?void 0:t.spatialReference)!=null?i:null,L(v({},r),{query:L(v({},(s=this.layer)==null?void 0:s.customParameters),{token:(l=this.layer)==null?void 0:l.apiKey})})),g=d.fromJSON(h.data);if(g!=null&&g.features)for(const p of g.features)p.sourceLayer=this;return g}toExportImageJSON(e){var r;const i={id:this.id,source:((r=this.source)==null?void 0:r.toJSON())||{mapLayerId:this.id,type:"mapLayer"}};if(this.definitionExpression){const l=G(e)?Fe(e,this):this.definitionExpression;i.definitionExpression=l}else G(e)&&(i.definitionExpression=e);const t=["renderer","labelingInfo","opacity","labelsVisible"].reduce((l,y)=>(l[y]=this.originIdOf(y),l),{});if(Object.keys(t).some(l=>t[l]>2)){const l=i.drawingInfo={};t.renderer>2&&(l.renderer=this.renderer?this.renderer.toJSON():null),t.labelsVisible>2&&(l.showLabels=this.labelsVisible),this.labelsVisible&&t.labelingInfo>2&&(l.labelingInfo=this.labelingInfo?this.labelingInfo.map(y=>y.write({},{origin:"service",layer:this.layer})):null,l.showLabels=!0),t.opacity>2&&(l.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(l.renderer)}return i}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,r=>{r.color||r.style!=="esriSMSX"&&r.style!=="esriSMSCross"||(r.outline&&r.outline.color?r.color=r.outline.color:r.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,r){if(e){const i="uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:[];for(const t of i)T(t.symbol)&&r(t.symbol);"symbol"in e&&T(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&T(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const i=this.layer,t=this._get(e);let s,l;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",l="supportsModification"}const y=P(this).getDefaultOrigin();if(y!=="service"){if(s&&this.get(`layer.capabilities.exportMap.${s}`)===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(l&&this.get(`capabilities.exportMap.${l}`)===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${l}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,r),y!=="service"&&t!==r&&i&&i.emit&&i.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach(i=>{i.parent=null,i.layer=null}),this.handles.removeAll()),e&&(e.forEach(i=>{i.parent=this,i.layer=this.layer}),this.handles.add([e.on("after-add",({item:i})=>{i.parent=this,i.layer=this.layer}),e.on("after-remove",({item:i})=>{i.parent=null,i.layer=null}),e.on("before-changes",i=>{const t=this.get("layer.capabilities.exportMap.supportsSublayersChanges");t==null||t||(M.error(new I("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),i.preventDefault())})]))}_logLockedError(e,r){M.error(new I("sublayer:locked",`Property '${e}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:r,sublayer:this,layer:this.layer}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};o.test={isMapImageLayerOverridePolicy:e=>e===c||e===j,isTileImageLayerOverridePolicy:e=>e===W},a([n({readOnly:!0})],o.prototype,"capabilities",void 0),a([b("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],o.prototype,"readCapabilities",null),a([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:j}}})],o.prototype,"definitionExpression",null),a([n({type:[Se],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],o.prototype,"fields",void 0),a([n({readOnly:!0})],o.prototype,"fieldsIndex",null),a([n({type:Ie,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:j},origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"floorInfo",null),a([n({type:Z,json:{read:{source:"layerDefinition.extent"}}})],o.prototype,"fullExtent",void 0),a([n({type:String})],o.prototype,"globalIdField",void 0),a([b("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],o.prototype,"readGlobalIdFieldFromService",null),a([n({type:F,json:{write:{ignoreOrigin:!0}}})],o.prototype,"id",null),a([n({value:null,type:[we],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:c}}})],o.prototype,"labelingInfo",null),a([S("labelingInfo")],o.prototype,"writeLabelingInfo",null),a([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:c}}})],o.prototype,"labelsVisible",null),a([n({value:null})],o.prototype,"layer",null),a([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:E}}})],o.prototype,"legendEnabled",void 0),a([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],o.prototype,"listMode",null),a([n({type:Number,value:0,json:{write:{overridePolicy:c}}})],o.prototype,"minScale",null),a([b("minScale",["minScale","layerDefinition.minScale"])],o.prototype,"readMinScale",null),a([n({type:Number,value:0,json:{write:{overridePolicy:c}}})],o.prototype,"maxScale",null),a([b("maxScale",["maxScale","layerDefinition.maxScale"])],o.prototype,"readMaxScale",null),a([n({type:String})],o.prototype,"objectIdField",void 0),a([b("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],o.prototype,"readObjectIdFieldFromService",null),a([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:c}}})],o.prototype,"opacity",null),a([b("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],o.prototype,"readOpacity",null),a([S("opacity")],o.prototype,"writeOpacity",null),a([n({json:{type:F,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:c}}})],o.prototype,"parent",void 0),a([S("parent")],o.prototype,"writeParent",null),a([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:E,writer(e,r,i){r[i]=!e}}}})],o.prototype,"popupEnabled",void 0),a([n({type:xe,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:E}}})],o.prototype,"popupTemplate",void 0),a([n({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),a([n({types:Oe,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:c},origins:{"web-scene":{types:Le,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:c}}}}})],o.prototype,"renderer",null),a([n({types:{key:"type",base:null,typeMap:{"data-layer":R,"map-layer":V}},cast(e){if(e){if("mapLayerId"in e)return K(V,e);if("dataSource"in e)return K(R,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:c}}})],o.prototype,"source",null),a([n()],o.prototype,"sourceJSON",void 0),a([n({value:null,json:{type:[F],write:{target:"subLayerIds",allowNull:!0,overridePolicy:c}}})],o.prototype,"sublayers",null),a([De("sublayers")],o.prototype,"castSublayers",null),a([S("sublayers")],o.prototype,"writeSublayers",null),a([n({type:String,json:{name:"name",write:{overridePolicy:E}}})],o.prototype,"title",void 0),a([n({type:String})],o.prototype,"typeIdField",void 0),a([b("typeIdField",["layerDefinition.typeIdField"])],o.prototype,"readTypeIdField",null),a([n({type:[Ee],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],o.prototype,"types",void 0),a([n({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:W}}})],o.prototype,"url",null),a([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:c}}})],o.prototype,"visible",null),a([S("visible")],o.prototype,"writeVisible",null),o=_=a([A("esri.layers.support.Sublayer")],o);const k=o;function Ue(e,r,i){return r.flatten(({sublayers:s})=>s).length!==e.length?!0:!!e.some(s=>s.originIdOf("minScale")>i||s.originIdOf("maxScale")>i||s.originIdOf("renderer")>i||s.originIdOf("labelingInfo")>i||s.originIdOf("opacity")>i||s.originIdOf("labelsVisible")>i||s.originIdOf("source")>i)||!X(e,r)}function Be(e,r,i){return!!e.some(t=>{const s=t.source;return!(!s||s.type==="map-layer"&&s.mapLayerId===t.id&&(!s.gdbVersion||s.gdbVersion===i.gdbVersion))||t.originIdOf("renderer")>2||t.originIdOf("labelingInfo")>2||t.originIdOf("opacity")>2||t.originIdOf("labelsVisible")>2})||!X(e,r)}function X(e,r){if(!e||!e.length)return!0;const i=r.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).map(l=>l.id).toArray();if(e.length>i.length)return!1;let t=0;const s=i.length;for(const{id:l}of e){for(;t<s&&i[t]!==l;)t++;if(t>=s)return!1}return!0}function je(e){return!!e&&e.some(r=>r.minScale!=null||r.layerDefinition&&r.layerDefinition.minScale!=null)}const Me=H.getLogger("esri.layers.TileLayer");function Ne(e,r){const i=[],t={};return e&&e.forEach(s=>{const l=new k;if(l.read(s,r),t[l.id]=l,s.parentLayerId!=null&&s.parentLayerId!==-1){const y=t[s.parentLayerId];y.sublayers||(y.sublayers=[]),y.sublayers.unshift(l)}else i.unshift(l)}),i}const N=C.ofType(k);function Y(e,r){e&&e.forEach(i=>{r(i),i.sublayers&&i.sublayers.length&&Y(i.sublayers,r)})}const Qe=e=>{let r=class extends e{constructor(...i){super(...i),this.allSublayers=new $e({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.handles.add(this.watch("sublayers",(t,s)=>this._handleSublayersChange(t,s),!0))}readSublayers(i,t){if(!t||!i)return;const{sublayersSourceJSON:s}=this,l=$(t.origin);if(l<2||(s[l]={context:t,visibleLayers:i.visibleLayers||s[l].visibleLayers,layers:i.layers||s[l].layers},l>2))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:y,origin:d}=this.createSublayersForOrigin("web-document"),h=P(this);h.setDefaultOrigin(d),this._set("sublayers",new N(y)),h.setDefaultOrigin("user")}findSublayerById(i){return this.allSublayers.find(t=>t.id===i)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(i){const t=$(i==="web-document"?"web-map":i);let s=2,l=this.sublayersSourceJSON[2].layers,y=this.sublayersSourceJSON[2].context,d=null;const h=[3,4,5].filter(u=>u<=t);for(const u of h){const f=this.sublayersSourceJSON[u];je(f.layers)&&(s=u,l=f.layers,y=f.context,f.visibleLayers&&(d={visibleLayers:f.visibleLayers,context:f.context}))}const g=[3,4,5].filter(u=>u>s&&u<=t);let p=null;for(const u of g){const{layers:f,visibleLayers:J,context:q}=this.sublayersSourceJSON[u];f&&(p={layers:f,context:q}),J&&(d={visibleLayers:J,context:q})}const w=Ne(l,y),x=new Map,O=new Set;if(p)for(const u of p.layers)x.set(u.id,u);if(d)for(const u of d.visibleLayers)O.add(u);return Y(w,u=>{p&&u.read(x.get(u.id),p.context),d&&u.read({defaultVisibility:O.has(u.id)},d.context)}),{origin:Pe(s),sublayers:new N({items:w})}}read(i,t){super.read(i,t),this.readSublayers(i,t)}_handleSublayersChange(i,t){t&&(t.forEach(s=>{s.parent=null,s.layer=null}),this.handles.remove("sublayers-owner")),i&&(i.forEach(s=>{s.parent=this,s.layer=this}),this.handles.add([i.on("after-add",({item:s})=>{s.parent=this,s.layer=this}),i.on("after-remove",({item:s})=>{s.parent=null,s.layer=null})],"sublayers-owner"),this.type==="tile"&&this.handles.add(i.on("before-changes",s=>{Me.error(new I("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),s.preventDefault()}),"sublayers-owner"))}};return a([n({readOnly:!0})],r.prototype,"allSublayers",void 0),a([n({readOnly:!0,type:C.ofType(k)})],r.prototype,"serviceSublayers",void 0),a([n({value:null,type:N,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),a([n({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=a([A("esri.layers.mixins.SublayersOwner")],r),r};export{k as K,Ue as e,Qe as f,Be as n,qe as y};
